class Solution:
    palindrome_set = set()

    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        result_str = ""

        for startIndex in range(0, len(s)):
            for endIndex in range(len(s), -1, -1):
                if startIndex <= endIndex:
                    current_str = s[startIndex:endIndex]
                    if self.isPalindrome(current_str) and len(current_str) > len(result_str):
                        result_str = current_str

        return result_str

    def isPalindrome(self, input):
        if input in self.palindrome_set:
            return True
        length = len(input)
        start_char = input[0:1]
        end_char = input[length - 1:length]
        if start_char == end_char:
            if length <= 3:
                self.palindrome_set.add(input)
                return True
            else:
                status = self.isPalindrome(input[1:length - 1])
                if status:
                    self.palindrome_set.add(input)
                    return True
                else:
                    return False
        else:
            return False